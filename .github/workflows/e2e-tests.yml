name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        required: true
        default: 'staging'
        type: choice
        options:
        - development
        - staging
        - production

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Executar testes em diferentes navegadores
        browser: [chrome, firefox]
        # Executar testes em paralelo para diferentes conjuntos
        containers: [1, 2, 3]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Start backend services
        run: |
          docker-compose -f docker-compose.test.yml up -d
          sleep 10
          npm run start:api:test
        env:
          DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
          REDIS_PASSWORD: ${{ secrets.TEST_REDIS_PASSWORD }}

      - name: Start frontend
        run: |
          npm run build
          npm run preview &
          sleep 5

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          browser: ${{ matrix.browser }}
          record: true
          parallel: true
          group: 'UI - ${{ matrix.browser }}'
          spec: cypress/e2e/**/*.cy.ts
          config-file: cypress.config.ts
          wait-on: 'http://localhost:4173'
          wait-on-timeout: 120
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_BASE_URL: http://localhost:4173
          CYPRESS_API_URL: http://localhost:8000/api
          CYPRESS_TEST_USER_EMAIL: ${{ secrets.CYPRESS_TEST_USER_EMAIL }}
          CYPRESS_TEST_USER_PASSWORD: ${{ secrets.CYPRESS_TEST_USER_PASSWORD }}

      - name: Generate test coverage report
        run: npm run cypress:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
          flags: e2e,cypress
          name: cypress-coverage
          fail_ci_if_error: false

      - name: Upload screenshots on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-${{ matrix.browser }}-${{ matrix.containers }}
          path: cypress/screenshots
          if-no-files-found: ignore

      - name: Upload videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos-${{ matrix.browser }}-${{ matrix.containers }}
          path: cypress/videos
          if-no-files-found: ignore

  report:
    needs: cypress-run
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Generate test summary
        run: |
          echo "# E2E Test Results" > test-summary.md
          echo "## Test Run Information" >> test-summary.md
          echo "- Date: $(date)" >> test-summary.md
          echo "- Commit: ${{ github.sha }}" >> test-summary.md
          echo "- Branch: ${{ github.ref }}" >> test-summary.md
          echo "- Triggered by: ${{ github.actor }}" >> test-summary.md
          echo "\n## Test Summary" >> test-summary.md
          
          if [ -d "artifacts/cypress-videos-chrome-1" ]; then
            echo "- Chrome tests: ✅ Completed" >> test-summary.md
          else
            echo "- Chrome tests: ❌ Failed" >> test-summary.md
          fi
          
          if [ -d "artifacts/cypress-videos-firefox-1" ]; then
            echo "- Firefox tests: ✅ Completed" >> test-summary.md
          else
            echo "- Firefox tests: ❌ Failed" >> test-summary.md
          fi
          
          if [ -d "artifacts/cypress-screenshots-chrome-1" ] || [ -d "artifacts/cypress-screenshots-firefox-1" ]; then
            echo "\n## Failures Detected" >> test-summary.md
            echo "Screenshots were generated during test failures. Check artifacts for details." >> test-summary.md
          else
            echo "\n## No Failures Detected" >> test-summary.md
            echo "All tests passed successfully." >> test-summary.md
          fi

      - name: Upload test summary
        uses: actions/upload-artifact@v3
        with:
          name: test-summary
          path: test-summary.md

      - name: Send notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ci-notifications
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: 'E2E Test Results'
          SLACK_MESSAGE: 'Test run completed. Check the workflow for details.'
          SLACK_FOOTER: 'TechZe Diagnóstico CI/CD Pipeline'