import"../vendor/vendor-react.C0-ekqbG.js";let t=0;const s=new Map,o=t=>{if(s.has(t))return;const o=setTimeout((()=>{s.delete(t),r({type:"REMOVE_TOAST",toastId:t})}),1e6);s.set(t,o)},e=(t,s)=>{switch(s.type){case"ADD_TOAST":return{...t,toasts:[s.toast,...t.toasts].slice(0,1)};case"UPDATE_TOAST":return{...t,toasts:t.toasts.map((t=>t.id===s.toast.id?{...t,...s.toast}:t))};case"DISMISS_TOAST":{const{toastId:e}=s;return e?o(e):t.toasts.forEach((t=>{o(t.id)})),{...t,toasts:t.toasts.map((t=>t.id===e||void 0===e?{...t,open:!1}:t))}}case"REMOVE_TOAST":return void 0===s.toastId?{...t,toasts:[]}:{...t,toasts:t.toasts.filter((t=>t.id!==s.toastId))}}},a=[];let n={toasts:[]};function r(t){n=e(n,t),a.forEach((t=>{t(n)}))}function i({...s}){const o=(t=(t+1)%Number.MAX_SAFE_INTEGER,t.toString()),e=()=>r({type:"DISMISS_TOAST",toastId:o});return r({type:"ADD_TOAST",toast:{...s,id:o,open:!0,onOpenChange:t=>{t||e()}}}),{id:o,dismiss:e,update:t=>r({type:"UPDATE_TOAST",toast:{...t,id:o}})}}export{i as t};
