{
  "statistics": {
    "detectionDate": "2025-06-12T12:37:28.249Z",
    "formats": {
      "javascript": {
        "sources": {
          "src/pages/Configuracoes/components/ConfiguracaoIntegracao.tsx": {
            "lines": 408,
            "tokens": 3531,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Configuracoes/components/ConfiguracaoGeral.tsx": {
            "lines": 366,
            "tokens": 3080,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Relatorios/index.tsx": {
            "lines": 257,
            "tokens": 2022,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/PortalCliente/index.tsx": {
            "lines": 154,
            "tokens": 1506,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/OrdemServico/index.tsx": {
            "lines": 479,
            "tokens": 4480,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Orcamentos/NovoOrcamento.tsx": {
            "lines": 330,
            "tokens": 2972,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Orcamentos/index.tsx": {
            "lines": 122,
            "tokens": 1134,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Orcamentos/DetalhesOrcamento.tsx": {
            "lines": 304,
            "tokens": 2551,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/GestaoEquipe/index.tsx": {
            "lines": 415,
            "tokens": 3617,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Estoque/index.tsx": {
            "lines": 418,
            "tokens": 3610,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Configuracoes/index.tsx": {
            "lines": 466,
            "tokens": 3986,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Agendamento/index.tsx": {
            "lines": 116,
            "tokens": 822,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/toaster.tsx": {
            "lines": 2,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/textarea.tsx": {
            "lines": 4,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/tabs.tsx": {
            "lines": 34,
            "tokens": 231,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/table.tsx": {
            "lines": 91,
            "tokens": 681,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/switch.tsx": {
            "lines": 10,
            "tokens": 38,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/separator.tsx": {
            "lines": 7,
            "tokens": 40,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/select.tsx": {
            "lines": 123,
            "tokens": 902,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/progress.tsx": {
            "lines": 4,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/popover.tsx": {
            "lines": 6,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/label.tsx": {
            "lines": 1,
            "tokens": 13,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/InstallPWABanner.tsx": {
            "lines": 7,
            "tokens": 46,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/input.tsx": {
            "lines": 2,
            "tokens": 19,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/GlassCard.tsx": {
            "lines": 15,
            "tokens": 39,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/dropdown-menu.tsx": {
            "lines": 89,
            "tokens": 659,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/dialog.tsx": {
            "lines": 83,
            "tokens": 571,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/CompanyDashboard.tsx": {
            "lines": 1,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/card.tsx": {
            "lines": 66,
            "tokens": 543,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/button.tsx": {
            "lines": 1,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/badge.tsx": {
            "lines": 0,
            "tokens": 13,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/alert.tsx": {
            "lines": 29,
            "tokens": 243,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/performance/LazyLoadWrapper.tsx": {
            "lines": 37,
            "tokens": 323,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/notifications/Toast.tsx": {
            "lines": 39,
            "tokens": 217,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/notifications/NotificationContainer.tsx": {
            "lines": 12,
            "tokens": 77,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/notifications/NotificationCenter.tsx": {
            "lines": 140,
            "tokens": 1016,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/notifications/NotificationButton.tsx": {
            "lines": 25,
            "tokens": 166,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/Sidebar.tsx": {
            "lines": 111,
            "tokens": 721,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/MobileOptimized.tsx": {
            "lines": 214,
            "tokens": 2100,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/MainLayout.tsx": {
            "lines": 12,
            "tokens": 94,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/forms/FormWizard.tsx": {
            "lines": 165,
            "tokens": 1157,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/forms/FormSection.tsx": {
            "lines": 44,
            "tokens": 339,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/forms/FormField.tsx": {
            "lines": 376,
            "tokens": 2831,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/forms/FormActions.tsx": {
            "lines": 36,
            "tokens": 272,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/forms/FileUpload.tsx": {
            "lines": 127,
            "tokens": 946,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/forms/DynamicForm.tsx": {
            "lines": 157,
            "tokens": 1425,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/ProgressRing.tsx": {
            "lines": 28,
            "tokens": 187,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/MetricCard.tsx": {
            "lines": 99,
            "tokens": 729,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/GlobalStats.tsx": {
            "lines": 71,
            "tokens": 565,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/ExecutiveDashboard.tsx": {
            "lines": 223,
            "tokens": 1488,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/DateRangePicker.tsx": {
            "lines": 142,
            "tokens": 1100,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/DashboardStats.tsx": {
            "lines": 15,
            "tokens": 78,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/ChartContainer.tsx": {
            "lines": 210,
            "tokens": 1675,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/BentoGrid.tsx": {
            "lines": 33,
            "tokens": 282,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/agendamento/SeletorHorario.tsx": {
            "lines": 19,
            "tokens": 150,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/agendamento/FormularioAgendamento.tsx": {
            "lines": 62,
            "tokens": 577,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/agendamento/ConfirmacaoAgendamento.tsx": {
            "lines": 103,
            "tokens": 1047,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/agendamento/CalendarioAgendamento.tsx": {
            "lines": 67,
            "tokens": 558,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Relatorios.tsx": {
            "lines": 537,
            "tokens": 4007,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/NotFound.tsx": {
            "lines": 0,
            "tokens": 13,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/LoginLoja.tsx": {
            "lines": 51,
            "tokens": 353,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 53,
            "duplicatedTokens": 426,
            "percentage": 103.92,
            "percentageTokens": 120.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/LoginAdmin.tsx": {
            "lines": 53,
            "tokens": 438,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 53,
            "duplicatedTokens": 426,
            "percentage": 100,
            "percentageTokens": 97.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Index.tsx": {
            "lines": 3,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/GestaoLojas.tsx": {
            "lines": 8,
            "tokens": 113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Diagnostic.tsx": {
            "lines": 320,
            "tokens": 3041,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/DashboardLoja.tsx": {
            "lines": 54,
            "tokens": 519,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/DashboardGlobal.tsx": {
            "lines": 28,
            "tokens": 222,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Dashboard.tsx": {
            "lines": 227,
            "tokens": 2213,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ClientesManagement.tsx": {
            "lines": 107,
            "tokens": 1095,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Auth.tsx": {
            "lines": 174,
            "tokens": 1395,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/PWAContext.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/NotificationContext.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/AuthContext.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/PWAStatus.tsx": {
            "lines": 249,
            "tokens": 1982,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/PWANotification.tsx": {
            "lines": 18,
            "tokens": 150,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ProtectedRoute.tsx": {
            "lines": 14,
            "tokens": 154,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/App.tsx": {
            "lines": 115,
            "tokens": 563,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 8935,
          "tokens": 73858,
          "sources": 77,
          "clones": 1,
          "duplicatedLines": 53,
          "duplicatedTokens": 426,
          "percentage": 0.59,
          "percentageTokens": 0.58,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "tsx": {
        "sources": {
          "src/pages/Configuracoes/components/ConfiguracaoIntegracao.tsx": {
            "lines": 486,
            "tokens": 4321,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Configuracoes/components/ConfiguracaoGeral.tsx": {
            "lines": 421,
            "tokens": 3624,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Relatorios/index.tsx": {
            "lines": 465,
            "tokens": 3793,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 88,
            "percentage": 2.58,
            "percentageTokens": 2.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/PortalCliente/index.tsx": {
            "lines": 347,
            "tokens": 3025,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 139,
            "percentage": 6.05,
            "percentageTokens": 4.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/OrdemServico/index.tsx": {
            "lines": 769,
            "tokens": 7079,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 50,
            "duplicatedTokens": 424,
            "percentage": 6.5,
            "percentageTokens": 5.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Orcamentos/NovoOrcamento.tsx": {
            "lines": 683,
            "tokens": 5943,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 108,
            "percentage": 1.02,
            "percentageTokens": 1.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Orcamentos/index.tsx": {
            "lines": 442,
            "tokens": 3734,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Orcamentos/DetalhesOrcamento.tsx": {
            "lines": 543,
            "tokens": 4373,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/GestaoEquipe/index.tsx": {
            "lines": 630,
            "tokens": 5501,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 70,
            "duplicatedTokens": 574,
            "percentage": 11.11,
            "percentageTokens": 10.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Estoque/index.tsx": {
            "lines": 726,
            "tokens": 5811,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Configuracoes/index.tsx": {
            "lines": 646,
            "tokens": 5547,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Agendamento/index.tsx": {
            "lines": 352,
            "tokens": 2771,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 139,
            "percentage": 5.97,
            "percentageTokens": 5.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/toaster.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 39,
            "duplicatedLines": 732,
            "duplicatedTokens": 7600,
            "percentage": 1785.37,
            "percentageTokens": 1909.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/Sidebar.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/PWAStatus.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/PWANotification.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/ProtectedRoute.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/ProgressRing.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/OfflineIndicator.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/MobileOptimized.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/MainLayout.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/LazyLoadWrapper.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/label.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/InstallPWABanner.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/input.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/GlobalStats.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/GlassCard.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/DashboardStats.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/CompanyDashboard.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/card.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/button.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/BentoGrid.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/badge.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/App.test.tsx": {
            "lines": 48,
            "tokens": 561,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 114,
            "percentage": 20.83,
            "percentageTokens": 20.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/alert.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/toaster.tsx": {
            "lines": 23,
            "tokens": 178,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/textarea.tsx": {
            "lines": 22,
            "tokens": 160,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/tabs.tsx": {
            "lines": 51,
            "tokens": 398,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/table.tsx": {
            "lines": 115,
            "tokens": 849,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/switch.tsx": {
            "lines": 25,
            "tokens": 183,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/separator.tsx": {
            "lines": 27,
            "tokens": 212,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/select.tsx": {
            "lines": 156,
            "tokens": 1160,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/progress.tsx": {
            "lines": 24,
            "tokens": 214,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/popover.tsx": {
            "lines": 27,
            "tokens": 231,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/OfflineIndicator.tsx": {
            "lines": 22,
            "tokens": 208,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/label.tsx": {
            "lines": 22,
            "tokens": 169,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/InstallPWABanner.tsx": {
            "lines": 48,
            "tokens": 430,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/input.tsx": {
            "lines": 19,
            "tokens": 155,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/GlassCard.tsx": {
            "lines": 38,
            "tokens": 217,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/dropdown-menu.tsx": {
            "lines": 127,
            "tokens": 979,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/dialog.tsx": {
            "lines": 118,
            "tokens": 834,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/CompanyDashboard.tsx": {
            "lines": 85,
            "tokens": 908,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/card.tsx": {
            "lines": 104,
            "tokens": 856,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/calendar.tsx": {
            "lines": 62,
            "tokens": 518,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/button.tsx": {
            "lines": 51,
            "tokens": 392,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/Button.test.tsx": {
            "lines": 35,
            "tokens": 406,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/badge.tsx": {
            "lines": 40,
            "tokens": 261,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/alert.tsx": {
            "lines": 62,
            "tokens": 512,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/performance/LazyLoadWrapper.tsx": {
            "lines": 107,
            "tokens": 948,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/notifications/Toast.tsx": {
            "lines": 117,
            "tokens": 850,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/notifications/NotificationContainer.tsx": {
            "lines": 74,
            "tokens": 508,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/notifications/NotificationCenter.tsx": {
            "lines": 254,
            "tokens": 1898,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/notifications/NotificationButton.tsx": {
            "lines": 98,
            "tokens": 667,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/Sidebar.tsx": {
            "lines": 231,
            "tokens": 1571,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/MobileOptimized.tsx": {
            "lines": 375,
            "tokens": 3696,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/MainLayout.tsx": {
            "lines": 106,
            "tokens": 811,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/forms/FormWizard.tsx": {
            "lines": 462,
            "tokens": 3727,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/forms/FormSection.tsx": {
            "lines": 175,
            "tokens": 1553,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 72,
            "duplicatedTokens": 711,
            "percentage": 41.14,
            "percentageTokens": 45.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/forms/FormField.tsx": {
            "lines": 444,
            "tokens": 3396,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/forms/FormActions.tsx": {
            "lines": 121,
            "tokens": 970,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 35,
            "duplicatedTokens": 316,
            "percentage": 28.93,
            "percentageTokens": 32.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/forms/FileUpload.tsx": {
            "lines": 369,
            "tokens": 3209,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 88,
            "percentage": 1.36,
            "percentageTokens": 2.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/forms/DynamicForm.tsx": {
            "lines": 369,
            "tokens": 3417,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 99,
            "duplicatedTokens": 969,
            "percentage": 26.83,
            "percentageTokens": 28.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/ProgressRing.tsx": {
            "lines": 88,
            "tokens": 688,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/MetricCard.tsx": {
            "lines": 310,
            "tokens": 2456,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/GlobalStats.tsx": {
            "lines": 129,
            "tokens": 974,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/ExecutiveDashboard.tsx": {
            "lines": 372,
            "tokens": 2613,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/DateRangePicker.tsx": {
            "lines": 311,
            "tokens": 2549,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 174,
            "percentage": 3.22,
            "percentageTokens": 6.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/DashboardStats.tsx": {
            "lines": 64,
            "tokens": 495,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/ChartContainer.tsx": {
            "lines": 426,
            "tokens": 3201,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/BentoGrid.tsx": {
            "lines": 48,
            "tokens": 404,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/agendamento/SeletorHorario.tsx": {
            "lines": 119,
            "tokens": 1132,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/agendamento/FormularioAgendamento.tsx": {
            "lines": 113,
            "tokens": 1024,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/agendamento/ConfirmacaoAgendamento.tsx": {
            "lines": 159,
            "tokens": 1529,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/agendamento/CalendarioAgendamento.tsx": {
            "lines": 150,
            "tokens": 1426,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/PWAContext.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/NovoOrcamento.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/NotFound.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/main.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/LoginLoja.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/LoginAdmin.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/Index.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/GestaoLojas.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/Diagnostic.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/DetalhesOrcamento.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/DashboardLoja.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/DashboardGlobal.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/Dashboard.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/ClientesManagement.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/AuthContext.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/Auth.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/App.test.test.tsx": {
            "lines": 41,
            "tokens": 398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 197,
            "percentage": 46.34,
            "percentageTokens": 49.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Relatorios.tsx": {
            "lines": 855,
            "tokens": 7011,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 38,
            "duplicatedTokens": 294,
            "percentage": 4.44,
            "percentageTokens": 4.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/NotFound.tsx": {
            "lines": 47,
            "tokens": 432,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/LoginLoja.tsx": {
            "lines": 161,
            "tokens": 1205,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/LoginAdmin.tsx": {
            "lines": 143,
            "tokens": 1289,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Index.tsx": {
            "lines": 345,
            "tokens": 3851,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/GestaoLojas.tsx": {
            "lines": 115,
            "tokens": 1143,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Diagnostic.tsx": {
            "lines": 617,
            "tokens": 6019,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 99,
            "percentage": 1.3,
            "percentageTokens": 1.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/DashboardLoja.tsx": {
            "lines": 177,
            "tokens": 1866,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/DashboardGlobal.tsx": {
            "lines": 171,
            "tokens": 1465,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 84,
            "percentage": 5.26,
            "percentageTokens": 5.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Dashboard.tsx": {
            "lines": 458,
            "tokens": 4604,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ClientesManagement.tsx": {
            "lines": 285,
            "tokens": 2725,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 84,
            "percentage": 3.16,
            "percentageTokens": 3.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/Auth.tsx": {
            "lines": 311,
            "tokens": 2767,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 15,
            "duplicatedTokens": 207,
            "percentage": 4.82,
            "percentageTokens": 7.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/PWAContext.tsx": {
            "lines": 231,
            "tokens": 2240,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/NotificationContext.tsx": {
            "lines": 163,
            "tokens": 1359,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/AuthContext.tsx": {
            "lines": 208,
            "tokens": 1969,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/PWAStatus.tsx": {
            "lines": 400,
            "tokens": 3137,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 88,
            "percentage": 1.25,
            "percentageTokens": 2.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/PWANotification.tsx": {
            "lines": 231,
            "tokens": 1793,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ProtectedRoute.tsx": {
            "lines": 58,
            "tokens": 507,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main.tsx": {
            "lines": 79,
            "tokens": 707,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/App.tsx": {
            "lines": 180,
            "tokens": 1335,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 20286,
          "tokens": 175171,
          "sources": 121,
          "clones": 58,
          "duplicatedLines": 975,
          "duplicatedTokens": 9893,
          "percentage": 4.81,
          "percentageTokens": 5.65,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "typescript": {
        "sources": {
          "src/components/forms/utils/validation.ts": {
            "lines": 373,
            "tokens": 3483,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 97,
            "percentage": 1.88,
            "percentageTokens": 2.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/forms/hooks/useForm.ts": {
            "lines": 348,
            "tokens": 2832,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/unit/diagnosticService.test.ts": {
            "lines": 94,
            "tokens": 950,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/__tests__/utils.test.ts": {
            "lines": 24,
            "tokens": 279,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/__tests__/supabase.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/integrations/supabase/types.ts": {
            "lines": 451,
            "tokens": 4089,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 44,
            "duplicatedTokens": 510,
            "percentage": 9.76,
            "percentageTokens": 12.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/integrations/supabase/client.ts": {
            "lines": 10,
            "tokens": 83,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/__tests__/usePWAOptimization.test.ts": {
            "lines": 28,
            "tokens": 254,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 231,
            "duplicatedTokens": 2211,
            "percentage": 825,
            "percentageTokens": 870.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/__tests__/usePerformanceMonitor.test.ts": {
            "lines": 28,
            "tokens": 254,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 201,
            "percentage": 75,
            "percentageTokens": 79.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/__tests__/useOrcamentos.test.ts": {
            "lines": 28,
            "tokens": 254,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 201,
            "percentage": 75,
            "percentageTokens": 79.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/__tests__/useOfflineStatus.test.ts": {
            "lines": 28,
            "tokens": 254,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 201,
            "percentage": 75,
            "percentageTokens": 79.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/__tests__/useOfflineOperations.test.ts": {
            "lines": 28,
            "tokens": 254,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 201,
            "percentage": 75,
            "percentageTokens": 79.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/__tests__/useMobileOptimizations.test.ts": {
            "lines": 28,
            "tokens": 254,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 201,
            "percentage": 75,
            "percentageTokens": 79.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/__tests__/useInstallPWA.test.ts": {
            "lines": 28,
            "tokens": 254,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 201,
            "percentage": 75,
            "percentageTokens": 79.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/__tests__/useDiagnostics.test.ts": {
            "lines": 28,
            "tokens": 254,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 201,
            "percentage": 75,
            "percentageTokens": 79.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/__tests__/useCachedQuery.test.ts": {
            "lines": 28,
            "tokens": 254,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 201,
            "percentage": 75,
            "percentageTokens": 79.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/__tests__/useAuth.test.ts": {
            "lines": 28,
            "tokens": 254,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 201,
            "percentage": 75,
            "percentageTokens": 79.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/__tests__/use-toast.test.ts": {
            "lines": 28,
            "tokens": 254,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 201,
            "percentage": 75,
            "percentageTokens": 79.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/__tests__/use-mobile.test.ts": {
            "lines": 28,
            "tokens": 254,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 201,
            "percentage": 75,
            "percentageTokens": 79.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/__tests__/use-toast.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/notifications/index.ts": {
            "lines": 15,
            "tokens": 144,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/forms/types.ts": {
            "lines": 357,
            "tokens": 3066,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 218,
            "percentage": 3.92,
            "percentageTokens": 7.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/forms/index.ts": {
            "lines": 202,
            "tokens": 1850,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 97,
            "percentage": 3.47,
            "percentageTokens": 5.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/dashboard/index.ts": {
            "lines": 23,
            "tokens": 191,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/types.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/shared.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/setup.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/scalabilityOptimizations.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/rlsPolicies.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/registerSW.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/realDiagnosticService.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/orcamentoAPI.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/multiTenantService.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/metricsCollector.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/jwtAuth.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/integrationService.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/githubActions.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/eslintConfig.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/diagnosticService.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/diagnosticApiService.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/diagnostic.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/client.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/circuitBreaker.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/canaryDeployment.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/cacheService.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/backupService.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/backgroundSyncService.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/authService.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/auditService.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/apiClient.test.ts": {
            "lines": 13,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/shared.ts": {
            "lines": 542,
            "tokens": 4524,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 118,
            "percentage": 3.14,
            "percentageTokens": 2.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/diagnostic.ts": {
            "lines": 112,
            "tokens": 906,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/setup.ts": {
            "lines": 44,
            "tokens": 398,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/scalabilityOptimizations.ts": {
            "lines": 178,
            "tokens": 1545,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/relatoriosAPI.ts": {
            "lines": 296,
            "tokens": 2625,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/realDiagnosticService.ts": {
            "lines": 333,
            "tokens": 3189,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/portalClienteAPI.ts": {
            "lines": 314,
            "tokens": 2256,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/orcamentoAPI.ts": {
            "lines": 391,
            "tokens": 3504,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 42,
            "duplicatedTokens": 480,
            "percentage": 10.74,
            "percentageTokens": 13.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/notificationAPI.ts": {
            "lines": 290,
            "tokens": 2282,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/multiTenantService.ts": {
            "lines": 35,
            "tokens": 310,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/integrationService.ts": {
            "lines": 159,
            "tokens": 1521,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/estoqueAPI.ts": {
            "lines": 507,
            "tokens": 4001,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 72,
            "duplicatedTokens": 467,
            "percentage": 14.2,
            "percentageTokens": 11.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/diagnosticService.ts": {
            "lines": 13,
            "tokens": 157,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/diagnosticApiService.ts": {
            "lines": 362,
            "tokens": 3509,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/configAPI.ts": {
            "lines": 489,
            "tokens": 4114,
            "sources": 1,
            "clones": 19,
            "duplicatedLines": 286,
            "duplicatedTokens": 2264,
            "percentage": 58.49,
            "percentageTokens": 55.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/cacheService.ts": {
            "lines": 159,
            "tokens": 1679,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/backupService.ts": {
            "lines": 100,
            "tokens": 1028,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/backgroundSyncService.ts": {
            "lines": 510,
            "tokens": 4117,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 82,
            "duplicatedTokens": 664,
            "percentage": 16.08,
            "percentageTokens": 16.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/authService.ts": {
            "lines": 150,
            "tokens": 1179,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/auditService.ts": {
            "lines": 100,
            "tokens": 911,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/apiClient.ts": {
            "lines": 94,
            "tokens": 1001,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 70,
            "duplicatedTokens": 660,
            "percentage": 74.47,
            "percentageTokens": 65.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/agendamentoAPI.ts": {
            "lines": 385,
            "tokens": 3163,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 91,
            "duplicatedTokens": 652,
            "percentage": 23.64,
            "percentageTokens": 20.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/security/rlsPolicies.ts": {
            "lines": 74,
            "tokens": 349,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/security/jwtAuth.ts": {
            "lines": 129,
            "tokens": 1142,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/monitoring/metricsCollector.ts": {
            "lines": 169,
            "tokens": 1765,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/utils.ts": {
            "lines": 5,
            "tokens": 63,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/supabase.ts": {
            "lines": 262,
            "tokens": 2722,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/integrations/circuitBreaker.ts": {
            "lines": 155,
            "tokens": 1398,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useRelatorios.ts": {
            "lines": 533,
            "tokens": 4145,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/usePWAOptimization.ts": {
            "lines": 388,
            "tokens": 3316,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/usePortalCliente.ts": {
            "lines": 231,
            "tokens": 1945,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/usePerformanceMonitor.ts": {
            "lines": 96,
            "tokens": 928,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useOrcamentos.ts": {
            "lines": 301,
            "tokens": 2581,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useOfflineStatus.ts": {
            "lines": 19,
            "tokens": 203,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useOfflineOperations.ts": {
            "lines": 286,
            "tokens": 2677,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useNotifications.ts": {
            "lines": 134,
            "tokens": 1261,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useMobileOptimizations.ts": {
            "lines": 351,
            "tokens": 3135,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useInstallPWA.ts": {
            "lines": 45,
            "tokens": 409,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useGestaoEquipe.ts": {
            "lines": 449,
            "tokens": 3571,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useEstoque.ts": {
            "lines": 338,
            "tokens": 2639,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 55,
            "duplicatedTokens": 349,
            "percentage": 16.27,
            "percentageTokens": 13.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useDiagnostics.ts": {
            "lines": 160,
            "tokens": 1487,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useConfiguracoes.ts": {
            "lines": 481,
            "tokens": 4012,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 140,
            "percentage": 4.16,
            "percentageTokens": 3.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useCharts.ts": {
            "lines": 408,
            "tokens": 3550,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useCachedQuery.ts": {
            "lines": 52,
            "tokens": 535,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useAuth.ts": {
            "lines": 207,
            "tokens": 1512,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useAgendamento.ts": {
            "lines": 310,
            "tokens": 2398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 51,
            "duplicatedTokens": 312,
            "percentage": 16.45,
            "percentageTokens": 13.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/use-toast.ts": {
            "lines": 188,
            "tokens": 1535,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/use-mobile.ts": {
            "lines": 17,
            "tokens": 159,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/deployment/canaryDeployment.ts": {
            "lines": 221,
            "tokens": 2121,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/code-standards/eslintConfig.ts": {
            "lines": 91,
            "tokens": 550,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/cicd/githubActions.ts": {
            "lines": 117,
            "tokens": 809,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/registerSW.ts": {
            "lines": 26,
            "tokens": 247,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 14403,
          "tokens": 124430,
          "sources": 102,
          "clones": 37,
          "duplicatedLines": 660,
          "duplicatedTokens": 5725,
          "percentage": 4.58,
          "percentageTokens": 4.6,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "css": {
        "sources": {
          "src/styles/glassmorphism.css": {
            "lines": 182,
            "tokens": 1388,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/index.css": {
            "lines": 434,
            "tokens": 3580,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 456,
            "percentage": 8.76,
            "percentageTokens": 12.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 616,
          "tokens": 4968,
          "sources": 2,
          "clones": 1,
          "duplicatedLines": 19,
          "duplicatedTokens": 228,
          "percentage": 3.08,
          "percentageTokens": 4.59,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 44240,
      "tokens": 378427,
      "sources": 302,
      "clones": 97,
      "duplicatedLines": 1707,
      "duplicatedTokens": 16272,
      "percentage": 3.86,
      "percentageTokens": 4.3,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ">\n                        <SelectItem value=\"aguardando\">Aguardando</SelectItem>\n                        <SelectItem value=\"em_andamento\">Em Andamento</SelectItem>\n                        <SelectItem value=\"aguardando_peca\">Aguardando Peça</SelectItem>\n                        <SelectItem value=\"aguardando_aprovacao\">Aguardando Aprovação</SelectItem>\n                        <SelectItem value=\"concluida\">Concluída</SelectItem>\n                        <SelectItem value=\"cancelada\">Cancelada</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\OrdemServico\\index.tsx",
        "start": 536,
        "end": 546,
        "startLoc": {
          "line": 536,
          "column": 14,
          "position": 4992
        },
        "endLoc": {
          "line": 546,
          "column": 3,
          "position": 5106
        }
      },
      "secondFile": {
        "name": "src\\pages\\OrdemServico\\index.tsx",
        "start": 358,
        "end": 369,
        "startLoc": {
          "line": 358,
          "column": 11,
          "position": 3281
        },
        "endLoc": {
          "line": 369,
          "column": 2,
          "position": 3397
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ")}\n                        </TableCell>\n                        {modoEdicao && (\n                          <TableCell>\n                            <Button variant=\"ghost\" size=\"sm\">\n                              <Trash2 className=\"h-4 w-4\" />\n                            </Button>\n                          </TableCell>\n                        )}\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TabsContent>\n              \n              <TabsContent value=\"historico",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\OrdemServico\\index.tsx",
        "start": 685,
        "end": 700,
        "startLoc": {
          "line": 685,
          "column": 6,
          "position": 6398
        },
        "endLoc": {
          "line": 700,
          "column": 10,
          "position": 6496
        }
      },
      "secondFile": {
        "name": "src\\pages\\OrdemServico\\index.tsx",
        "start": 643,
        "end": 658,
        "startLoc": {
          "line": 643,
          "column": 11,
          "position": 6064
        },
        "endLoc": {
          "line": 658,
          "column": 9,
          "position": 6162
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "({\n        nome: '',\n        email: '',\n        telefone: '',\n        funcao: '',\n        salario: '',\n        dataAdmissao: '',\n        endereco: '',\n        observacoes: '',\n        permissoes: {\n          vendas: false,\n          estoque: false,\n          financeiro: false,\n          relatorios: false,\n          configuracoes: false,\n          admin: false\n        }\n      });\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\GestaoEquipe\\index.tsx",
        "start": 109,
        "end": 127,
        "startLoc": {
          "line": 109,
          "column": 19,
          "position": 1072
        },
        "endLoc": {
          "line": 127,
          "column": 2,
          "position": 1187
        }
      },
      "secondFile": {
        "name": "src\\pages\\GestaoEquipe\\index.tsx",
        "start": 58,
        "end": 77,
        "startLoc": {
          "line": 58,
          "column": 9,
          "position": 610
        },
        "endLoc": {
          "line": 77,
          "column": 6,
          "position": 726
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ">\n                <SelectItem value=\"Técnico\">Técnico</SelectItem>\n                <SelectItem value=\"Vendedor\">Vendedor</SelectItem>\n                <SelectItem value=\"Atendente\">Atendente</SelectItem>\n                <SelectItem value=\"Gerente\">Gerente</SelectItem>\n                <SelectItem value=\"Administrador\">Administrador</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </CardContent",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\GestaoEquipe\\index.tsx",
        "start": 466,
        "end": 475,
        "startLoc": {
          "line": 466,
          "column": 11,
          "position": 4117
        },
        "endLoc": {
          "line": 475,
          "column": 12,
          "position": 4212
        }
      },
      "secondFile": {
        "name": "src\\pages\\GestaoEquipe\\index.tsx",
        "start": 281,
        "end": 290,
        "startLoc": {
          "line": 281,
          "column": 14,
          "position": 2520
        },
        "endLoc": {
          "line": 290,
          "column": 4,
          "position": 2615
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ">\n                          <SelectItem value=\"ativo\">Ativo</SelectItem>\n                          <SelectItem value=\"inativo\">Inativo</SelectItem>\n                          <SelectItem value=\"ferias\">Férias</SelectItem>\n                          <SelectItem value=\"licenca\">Licença</SelectItem>\n                        </SelectContent>\n                      </Select>\n                      \n                      <AlertDialog",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\GestaoEquipe\\index.tsx",
        "start": 577,
        "end": 585,
        "startLoc": {
          "line": 577,
          "column": 14,
          "position": 5093
        },
        "endLoc": {
          "line": 585,
          "column": 12,
          "position": 5170
        }
      },
      "secondFile": {
        "name": "src\\pages\\GestaoEquipe\\index.tsx",
        "start": 453,
        "end": 461,
        "startLoc": {
          "line": 453,
          "column": 11,
          "position": 3975
        },
        "endLoc": {
          "line": 461,
          "column": 7,
          "position": 4052
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <Alert className=\"max-w-md\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertDescription>{error}</AlertDescription>\n        </Alert>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\Agendamento\\index.tsx",
        "start": 135,
        "end": 156,
        "startLoc": {
          "line": 135,
          "column": 16,
          "position": 1035
        },
        "endLoc": {
          "line": 156,
          "column": 39,
          "position": 1174
        }
      },
      "secondFile": {
        "name": "src\\pages\\PortalCliente\\index.tsx",
        "start": 87,
        "end": 108,
        "startLoc": {
          "line": 87,
          "column": 6,
          "position": 713
        },
        "endLoc": {
          "line": 108,
          "column": 39,
          "position": 852
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": string\r\n          disk_metrics?: Json | null\r\n          disk_status?: string | null\r\n          error_message?: string | null\r\n          health_score?: number | null\r\n          id?: string\r\n          memory_metrics?: Json | null\r\n          memory_status?: string | null\r\n          network_metrics?: Json | null\r\n          network_status?: string | null\r\n          raw_data?: Json | null\r\n          status?",
      "tokens": 0,
      "firstFile": {
        "name": "src\\integrations\\supabase\\types.ts",
        "start": 179,
        "end": 190,
        "startLoc": {
          "line": 179,
          "column": 2,
          "position": 1610
        },
        "endLoc": {
          "line": 190,
          "column": 2,
          "position": 1733
        }
      },
      "secondFile": {
        "name": "src\\integrations\\supabase\\types.ts",
        "start": 160,
        "end": 171,
        "startLoc": {
          "line": 160,
          "column": 10,
          "position": 1413
        },
        "endLoc": {
          "line": 171,
          "column": 2,
          "position": 1536
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "<\r\n  DefaultSchemaTableNameOrOptions extends\r\n    | keyof DefaultSchema[\"Tables\"]\r\n    | { schema: keyof Database },\r\n  TableName extends DefaultSchemaTableNameOrOptions extends {\r\n    schema: keyof Database\r\n  }\r\n    ? keyof Database[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"]\r\n    : never = never,\r\n> = DefaultSchemaTableNameOrOptions extends { schema: keyof Database }\r\n  ? Database[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"][TableName] extends {\r\n      Update",
      "tokens": 0,
      "firstFile": {
        "name": "src\\integrations\\supabase\\types.ts",
        "start": 395,
        "end": 406,
        "startLoc": {
          "line": 395,
          "column": 13,
          "position": 3499
        },
        "endLoc": {
          "line": 406,
          "column": 7,
          "position": 3631
        }
      },
      "secondFile": {
        "name": "src\\integrations\\supabase\\types.ts",
        "start": 372,
        "end": 383,
        "startLoc": {
          "line": 372,
          "column": 13,
          "position": 3274
        },
        "endLoc": {
          "line": 383,
          "column": 7,
          "position": 3406
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "import { describe, it, expect } from 'vitest'\r\nimport { renderHook } from '@testing-library/react'\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\r\nimport React from 'react'\r\n\r\n// Mock do hook se necessário\r\nconst createWrapper = () => {\r\n  const queryClient = new QueryClient({\r\n    defaultOptions: {\r\n      queries: { retry: false },\r\n      mutations: { retry: false }\r\n    }\r\n  })\r\n  \r\n  return ({ children }: { children: React.ReactNode }) => (\r\n    <QueryClientProvider client={queryClient}>\r\n      {children}\r\n    </QueryClientProvider>\r\n  )\r\n}\r\n\r\ndescribe('usePerformanceMonitor Hook'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\__tests__\\usePerformanceMonitor.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 29,
          "position": 201
        }
      },
      "secondFile": {
        "name": "src\\hooks\\__tests__\\usePWAOptimization.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 26,
          "position": 201
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "import { describe, it, expect } from 'vitest'\r\nimport { renderHook } from '@testing-library/react'\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\r\nimport React from 'react'\r\n\r\n// Mock do hook se necessário\r\nconst createWrapper = () => {\r\n  const queryClient = new QueryClient({\r\n    defaultOptions: {\r\n      queries: { retry: false },\r\n      mutations: { retry: false }\r\n    }\r\n  })\r\n  \r\n  return ({ children }: { children: React.ReactNode }) => (\r\n    <QueryClientProvider client={queryClient}>\r\n      {children}\r\n    </QueryClientProvider>\r\n  )\r\n}\r\n\r\ndescribe('useOrcamentos Hook'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\__tests__\\useOrcamentos.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 21,
          "position": 201
        }
      },
      "secondFile": {
        "name": "src\\hooks\\__tests__\\usePWAOptimization.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 26,
          "position": 201
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "import { describe, it, expect } from 'vitest'\r\nimport { renderHook } from '@testing-library/react'\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\r\nimport React from 'react'\r\n\r\n// Mock do hook se necessário\r\nconst createWrapper = () => {\r\n  const queryClient = new QueryClient({\r\n    defaultOptions: {\r\n      queries: { retry: false },\r\n      mutations: { retry: false }\r\n    }\r\n  })\r\n  \r\n  return ({ children }: { children: React.ReactNode }) => (\r\n    <QueryClientProvider client={queryClient}>\r\n      {children}\r\n    </QueryClientProvider>\r\n  )\r\n}\r\n\r\ndescribe('useOfflineStatus Hook'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\__tests__\\useOfflineStatus.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 24,
          "position": 201
        }
      },
      "secondFile": {
        "name": "src\\hooks\\__tests__\\usePWAOptimization.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 26,
          "position": 201
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "import { describe, it, expect } from 'vitest'\r\nimport { renderHook } from '@testing-library/react'\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\r\nimport React from 'react'\r\n\r\n// Mock do hook se necessário\r\nconst createWrapper = () => {\r\n  const queryClient = new QueryClient({\r\n    defaultOptions: {\r\n      queries: { retry: false },\r\n      mutations: { retry: false }\r\n    }\r\n  })\r\n  \r\n  return ({ children }: { children: React.ReactNode }) => (\r\n    <QueryClientProvider client={queryClient}>\r\n      {children}\r\n    </QueryClientProvider>\r\n  )\r\n}\r\n\r\ndescribe('useOfflineOperations Hook'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\__tests__\\useOfflineOperations.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 28,
          "position": 201
        }
      },
      "secondFile": {
        "name": "src\\hooks\\__tests__\\usePWAOptimization.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 26,
          "position": 201
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "import { describe, it, expect } from 'vitest'\r\nimport { renderHook } from '@testing-library/react'\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\r\nimport React from 'react'\r\n\r\n// Mock do hook se necessário\r\nconst createWrapper = () => {\r\n  const queryClient = new QueryClient({\r\n    defaultOptions: {\r\n      queries: { retry: false },\r\n      mutations: { retry: false }\r\n    }\r\n  })\r\n  \r\n  return ({ children }: { children: React.ReactNode }) => (\r\n    <QueryClientProvider client={queryClient}>\r\n      {children}\r\n    </QueryClientProvider>\r\n  )\r\n}\r\n\r\ndescribe('useMobileOptimizations Hook'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\__tests__\\useMobileOptimizations.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 30,
          "position": 201
        }
      },
      "secondFile": {
        "name": "src\\hooks\\__tests__\\usePWAOptimization.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 26,
          "position": 201
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "import { describe, it, expect } from 'vitest'\r\nimport { renderHook } from '@testing-library/react'\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\r\nimport React from 'react'\r\n\r\n// Mock do hook se necessário\r\nconst createWrapper = () => {\r\n  const queryClient = new QueryClient({\r\n    defaultOptions: {\r\n      queries: { retry: false },\r\n      mutations: { retry: false }\r\n    }\r\n  })\r\n  \r\n  return ({ children }: { children: React.ReactNode }) => (\r\n    <QueryClientProvider client={queryClient}>\r\n      {children}\r\n    </QueryClientProvider>\r\n  )\r\n}\r\n\r\ndescribe('useInstallPWA Hook'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\__tests__\\useInstallPWA.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 21,
          "position": 201
        }
      },
      "secondFile": {
        "name": "src\\hooks\\__tests__\\usePWAOptimization.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 26,
          "position": 201
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "import { describe, it, expect } from 'vitest'\r\nimport { renderHook } from '@testing-library/react'\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\r\nimport React from 'react'\r\n\r\n// Mock do hook se necessário\r\nconst createWrapper = () => {\r\n  const queryClient = new QueryClient({\r\n    defaultOptions: {\r\n      queries: { retry: false },\r\n      mutations: { retry: false }\r\n    }\r\n  })\r\n  \r\n  return ({ children }: { children: React.ReactNode }) => (\r\n    <QueryClientProvider client={queryClient}>\r\n      {children}\r\n    </QueryClientProvider>\r\n  )\r\n}\r\n\r\ndescribe('useDiagnostics Hook'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\__tests__\\useDiagnostics.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 22,
          "position": 201
        }
      },
      "secondFile": {
        "name": "src\\hooks\\__tests__\\usePWAOptimization.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 26,
          "position": 201
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "import { describe, it, expect } from 'vitest'\r\nimport { renderHook } from '@testing-library/react'\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\r\nimport React from 'react'\r\n\r\n// Mock do hook se necessário\r\nconst createWrapper = () => {\r\n  const queryClient = new QueryClient({\r\n    defaultOptions: {\r\n      queries: { retry: false },\r\n      mutations: { retry: false }\r\n    }\r\n  })\r\n  \r\n  return ({ children }: { children: React.ReactNode }) => (\r\n    <QueryClientProvider client={queryClient}>\r\n      {children}\r\n    </QueryClientProvider>\r\n  )\r\n}\r\n\r\ndescribe('useCachedQuery Hook'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\__tests__\\useCachedQuery.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 22,
          "position": 201
        }
      },
      "secondFile": {
        "name": "src\\hooks\\__tests__\\usePWAOptimization.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 26,
          "position": 201
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "import { describe, it, expect } from 'vitest'\r\nimport { renderHook } from '@testing-library/react'\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\r\nimport React from 'react'\r\n\r\n// Mock do hook se necessário\r\nconst createWrapper = () => {\r\n  const queryClient = new QueryClient({\r\n    defaultOptions: {\r\n      queries: { retry: false },\r\n      mutations: { retry: false }\r\n    }\r\n  })\r\n  \r\n  return ({ children }: { children: React.ReactNode }) => (\r\n    <QueryClientProvider client={queryClient}>\r\n      {children}\r\n    </QueryClientProvider>\r\n  )\r\n}\r\n\r\ndescribe('useAuth Hook'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\__tests__\\useAuth.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 15,
          "position": 201
        }
      },
      "secondFile": {
        "name": "src\\hooks\\__tests__\\usePWAOptimization.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 26,
          "position": 201
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "import { describe, it, expect } from 'vitest'\r\nimport { renderHook } from '@testing-library/react'\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\r\nimport React from 'react'\r\n\r\n// Mock do hook se necessário\r\nconst createWrapper = () => {\r\n  const queryClient = new QueryClient({\r\n    defaultOptions: {\r\n      queries: { retry: false },\r\n      mutations: { retry: false }\r\n    }\r\n  })\r\n  \r\n  return ({ children }: { children: React.ReactNode }) => (\r\n    <QueryClientProvider client={queryClient}>\r\n      {children}\r\n    </QueryClientProvider>\r\n  )\r\n}\r\n\r\ndescribe('use-toast Hook'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\__tests__\\use-toast.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 17,
          "position": 201
        }
      },
      "secondFile": {
        "name": "src\\hooks\\__tests__\\usePWAOptimization.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 26,
          "position": 201
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "import { describe, it, expect } from 'vitest'\r\nimport { renderHook } from '@testing-library/react'\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\r\nimport React from 'react'\r\n\r\n// Mock do hook se necessário\r\nconst createWrapper = () => {\r\n  const queryClient = new QueryClient({\r\n    defaultOptions: {\r\n      queries: { retry: false },\r\n      mutations: { retry: false }\r\n    }\r\n  })\r\n  \r\n  return ({ children }: { children: React.ReactNode }) => (\r\n    <QueryClientProvider client={queryClient}>\r\n      {children}\r\n    </QueryClientProvider>\r\n  )\r\n}\r\n\r\ndescribe('use-mobile Hook'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\__tests__\\use-mobile.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 18,
          "position": 201
        }
      },
      "secondFile": {
        "name": "src\\hooks\\__tests__\\usePWAOptimization.test.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 26,
          "position": 201
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('Sidebar Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\Sidebar.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('PWAStatus Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\PWAStatus.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 22,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('PWANotification Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\PWANotification.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 28,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('ProtectedRoute Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\ProtectedRoute.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 27,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('ProgressRing Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\ProgressRing.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 25,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('OfflineIndicator Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\OfflineIndicator.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 29,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('MobileOptimized Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\MobileOptimized.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 28,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('MainLayout Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\MainLayout.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 23,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('LazyLoadWrapper Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\LazyLoadWrapper.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 28,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('label Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\label.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 18,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('InstallPWABanner Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\InstallPWABanner.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 29,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('input Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\input.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 18,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('GlobalStats Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\GlobalStats.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 24,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('GlassCard Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\GlassCard.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 22,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('DashboardStats Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\DashboardStats.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 27,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('CompanyDashboard Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\CompanyDashboard.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 29,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('card Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\card.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 17,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('button Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\button.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 19,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('BentoGrid Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\BentoGrid.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 22,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('badge Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\badge.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 18,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\n// Mock do Background Sync Service",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\App.test.tsx",
        "start": 16,
        "end": 26,
        "startLoc": {
          "line": 16,
          "column": 5,
          "position": 224
        },
        "endLoc": {
          "line": 26,
          "column": 35,
          "position": 338
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 9,
        "end": 19,
        "startLoc": {
          "line": 9,
          "column": 5,
          "position": 89
        },
        "endLoc": {
          "line": 19,
          "column": 6,
          "position": 203
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('alert Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\__tests__\\alert.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 18,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ";\n  setError: (field: string, error: string[]) => void;\n  clearError: (field: string) => void;\n  validateField: (field: string) => Promise<boolean>;\n  validateForm: () => Promise<boolean>;\n  reset: (data?: FormData) => void;\n  submit: () => Promise<void>;\n  isDirty",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\forms\\types.ts",
        "start": 303,
        "end": 310,
        "startLoc": {
          "line": 303,
          "column": 4,
          "position": 2620
        },
        "endLoc": {
          "line": 310,
          "column": 8,
          "position": 2729
        }
      },
      "secondFile": {
        "name": "src\\components\\forms\\types.ts",
        "start": 280,
        "end": 287,
        "startLoc": {
          "line": 280,
          "column": 5,
          "position": 2349
        },
        "endLoc": {
          "line": 287,
          "column": 2,
          "position": 2457
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ") * (10 - i);\n    }\n    let digit1 = 11 - (sum % 11);\n    if (digit1 > 9) digit1 = 0;\n    \n    sum = 0;\n    for (let i = 0; i < 10; i++) {\n      sum += parseInt(numbers",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\forms\\index.ts",
        "start": 161,
        "end": 168,
        "startLoc": {
          "line": 161,
          "column": 2,
          "position": 1244
        },
        "endLoc": {
          "line": 168,
          "column": 8,
          "position": 1341
        }
      },
      "secondFile": {
        "name": "src\\components\\forms\\utils\\validation.ts",
        "start": 65,
        "end": 72,
        "startLoc": {
          "line": 65,
          "column": 2,
          "position": 769
        },
        "endLoc": {
          "line": 72,
          "column": 4,
          "position": 866
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": ".conditional;\n    const fieldValue = formData[field];\n    \n    switch (operator) {\n      case 'equals':\n        return fieldValue === value;\n      case 'not_equals':\n        return fieldValue !== value;\n      case 'contains':\n        return Array.isArray(fieldValue) \n          ? fieldValue.includes(value) \n          : String(fieldValue).includes(String(value));\n      case 'greater_than':\n        return Number(fieldValue) > Number(value);\n      case 'less_than':\n        return Number(fieldValue) < Number(value);\n      default:\n        return true;\n    }\n  })",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\forms\\FormActions.tsx",
        "start": 18,
        "end": 37,
        "startLoc": {
          "line": 18,
          "column": 7,
          "position": 164
        },
        "endLoc": {
          "line": 37,
          "column": 2,
          "position": 328
        }
      },
      "secondFile": {
        "name": "src\\components\\forms\\FormSection.tsx",
        "start": 29,
        "end": 48,
        "startLoc": {
          "line": 29,
          "column": 7,
          "position": 287
        },
        "endLoc": {
          "line": 48,
          "column": 2,
          "position": 451
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ">\n        {loading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n        {!loading && action.icon && (\n          <span className=\"mr-2\">{action.icon}</span>\n        )}\n        {action.label}\n      </Button>\n    );\n  };",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\forms\\FormActions.tsx",
        "start": 100,
        "end": 108,
        "startLoc": {
          "line": 100,
          "column": 7,
          "position": 812
        },
        "endLoc": {
          "line": 108,
          "column": 2,
          "position": 888
        }
      },
      "secondFile": {
        "name": "src\\components\\forms\\FormActions.tsx",
        "start": 84,
        "end": 94,
        "startLoc": {
          "line": 84,
          "column": 9,
          "position": 689
        },
        "endLoc": {
          "line": 94,
          "column": 44,
          "position": 768
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ") {\n      const field = schema.fields.find(f => f.name === fieldName);\n      if (field) {\n        setValidationState(prev => ({ ...prev, isValidating: true }));\n        \n        try {\n          const fieldErrors = await validateField(field, formData",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\forms\\DynamicForm.tsx",
        "start": 83,
        "end": 89,
        "startLoc": {
          "line": 83,
          "column": 9,
          "position": 818
        },
        "endLoc": {
          "line": 89,
          "column": 9,
          "position": 903
        }
      },
      "secondFile": {
        "name": "src\\components\\forms\\DynamicForm.tsx",
        "start": 52,
        "end": 58,
        "startLoc": {
          "line": 52,
          "column": 11,
          "position": 506
        },
        "endLoc": {
          "line": 58,
          "column": 6,
          "position": 591
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": ");\n          setValidationState(prev => ({\n            ...prev,\n            errors: {\n              ...prev.errors,\n              [fieldName]: fieldErrors\n            },\n            isValidating: false\n          }));\n        } catch (error) {\n          console.error('Erro na validação:', error);\n          setValidationState(prev => ({ ...prev, isValidating: false }));\n        }\n      }\n    }\n  }, [formData, schema]);\n\n  // Função para submeter formulário",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\forms\\DynamicForm.tsx",
        "start": 89,
        "end": 106,
        "startLoc": {
          "line": 89,
          "column": 9,
          "position": 910
        },
        "endLoc": {
          "line": 106,
          "column": 35,
          "position": 1036
        }
      },
      "secondFile": {
        "name": "src\\components\\forms\\DynamicForm.tsx",
        "start": 58,
        "end": 75,
        "startLoc": {
          "line": 58,
          "column": 12,
          "position": 595
        },
        "endLoc": {
          "line": 75,
          "column": 40,
          "position": 721
        }
      }
    },
    {
      "format": "tsx",
      "lines": 26,
      "fragment": "fields.filter(field => {\n      if (field.hidden) return false;\n      \n      if (field.conditional) {\n        const { field: condField, value: condValue, operator = 'equals' } = field.conditional;\n        const fieldValue = formData[condField];\n        \n        switch (operator) {\n          case 'equals':\n            return fieldValue === condValue;\n          case 'not_equals':\n            return fieldValue !== condValue;\n          case 'contains':\n            return Array.isArray(fieldValue) ? fieldValue.includes(condValue) : String(fieldValue).includes(String(condValue));\n          case 'greater_than':\n            return Number(fieldValue) > Number(condValue);\n          case 'less_than':\n            return Number(fieldValue) < Number(condValue);\n          default:\n            return true;\n        }\n      }\n      \n      return true;\n    });\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\forms\\DynamicForm.tsx",
        "start": 169,
        "end": 194,
        "startLoc": {
          "line": 169,
          "column": 2,
          "position": 1629
        },
        "endLoc": {
          "line": 194,
          "column": 2,
          "position": 1869
        }
      },
      "secondFile": {
        "name": "src\\components\\forms\\FormSection.tsx",
        "start": 51,
        "end": 79,
        "startLoc": {
          "line": 51,
          "column": 2,
          "position": 464
        },
        "endLoc": {
          "line": 79,
          "column": 29,
          "position": 709
        }
      }
    },
    {
      "format": "tsx",
      "lines": 29,
      "fragment": ">\n        {visibleFields.map((field) => {\n          const gridClasses = field.grid ? [\n            field.grid.xs && `col-span-${field.grid.xs}`,\n            field.grid.sm && `sm:col-span-${field.grid.sm}`,\n            field.grid.md && `md:col-span-${field.grid.md}`,\n            field.grid.lg && `lg:col-span-${field.grid.lg}`,\n            field.grid.xl && `xl:col-span-${field.grid.xl}`\n          ].filter(Boolean).join(' ') : '';\n          \n          return (\n            <div key={field.name} className={gridClasses}>\n              <FormField\n                id={schema.id}\n                config={field}\n                value={formData[field.name]}\n                onChange={(value) => handleFieldChange(field.name, value)}\n                onBlur={() => handleFieldBlur(field.name)}\n                error={validationState.errors[field.name]}\n                touched={validationState.touched[field.name]}\n                disabled={disabled || field.disabled}\n                formData={formData}\n              />\n            </div>\n          );\n        })}\n      </div>\n    );\n  },",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\forms\\DynamicForm.tsx",
        "start": 210,
        "end": 238,
        "startLoc": {
          "line": 210,
          "column": 7,
          "position": 1994
        },
        "endLoc": {
          "line": 238,
          "column": 2,
          "position": 2301
        }
      },
      "secondFile": {
        "name": "src\\components\\forms\\FormSection.tsx",
        "start": 82,
        "end": 110,
        "startLoc": {
          "line": 82,
          "column": 2,
          "position": 739
        },
        "endLoc": {
          "line": 110,
          "column": 2,
          "position": 1042
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "const getCurrentPreset = () => {\n    const current = presetRanges.find(preset => \n      preset.range.start.getTime() === value.start.getTime() &&\n      preset.range.end.getTime() === value.end.getTime()\n    );\n    return current?.value || ''",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\dashboard\\DateRangePicker.tsx",
        "start": 282,
        "end": 287,
        "startLoc": {
          "line": 282,
          "column": 3,
          "position": 2266
        },
        "endLoc": {
          "line": 287,
          "column": 3,
          "position": 2353
        }
      },
      "secondFile": {
        "name": "src\\components\\dashboard\\DateRangePicker.tsx",
        "start": 112,
        "end": 117,
        "startLoc": {
          "line": 112,
          "column": 3,
          "position": 864
        },
        "endLoc": {
          "line": 117,
          "column": 9,
          "position": 951
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('PWAContext Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\__tests__\\PWAContext.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 23,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('NovoOrcamento Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\__tests__\\NovoOrcamento.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 26,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('NotFound Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\__tests__\\NotFound.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 21,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('main Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\__tests__\\main.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 17,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('LoginLoja Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\__tests__\\LoginLoja.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 22,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('LoginAdmin Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\__tests__\\LoginAdmin.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 23,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('Index Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\__tests__\\Index.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 18,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('GestaoLojas Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\__tests__\\GestaoLojas.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 24,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('Diagnostic Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\__tests__\\Diagnostic.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 23,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('DetalhesOrcamento Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\__tests__\\DetalhesOrcamento.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 30,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('DashboardLoja Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\__tests__\\DashboardLoja.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 26,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('DashboardGlobal Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\__tests__\\DashboardGlobal.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 28,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('Dashboard Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\__tests__\\Dashboard.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 22,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('ClientesManagement Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\__tests__\\ClientesManagement.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 31,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('AuthContext Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\__tests__\\AuthContext.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 24,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('Auth Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\__tests__\\Auth.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 17,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "// Mock do Supabase\r\nvi.mock('@/integrations/supabase/client', () => ({\r\n  supabase: {\r\n    from: vi.fn(() => ({\r\n      select: vi.fn(() => ({\r\n        eq: vi.fn(() => ({\r\n          single: vi.fn(() => Promise.resolve({ data: null, error: null }))\r\n        }))\r\n      }))\r\n    }))\r\n  }\r\n}))\r\n\r\nconst ComponentWithRouter = ({ children }: { children: React.ReactNode }) => (\r\n  <BrowserRouter>\r\n    {children}\r\n  </BrowserRouter>\r\n)\r\n\r\ndescribe('App Component'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\__tests__\\App.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 16,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src\\components\\__tests__\\toaster.test.test.tsx",
        "start": 6,
        "end": 25,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 62
        },
        "endLoc": {
          "line": 25,
          "column": 20,
          "position": 259
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "const valorPecas = dados.itens\n          .filter(item => item.tipo === 'peca')\n          .reduce((sum, item) => sum + (item.quantidade * item.valorUnitario), 0);\n        \n        const valorServicos = dados.itens\n          .filter(item => item.tipo === 'servico')\n          .reduce((sum, item) => sum + (item.quantidade * item.valorUnitario), 0);\n        \n        const valorTotal = valorPecas + valorServicos - (",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\orcamentoAPI.ts",
        "start": 169,
        "end": 177,
        "startLoc": {
          "line": 169,
          "column": 9,
          "position": 1402
        },
        "endLoc": {
          "line": 177,
          "column": 2,
          "position": 1544
        }
      },
      "secondFile": {
        "name": "src\\services\\orcamentoAPI.ts",
        "start": 90,
        "end": 98,
        "startLoc": {
          "line": 90,
          "column": 7,
          "position": 638
        },
        "endLoc": {
          "line": 98,
          "column": 6,
          "position": 780
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "id,\n          tipo: item.tipo,\n          peca_id: item.pecaId,\n          descricao: item.descricao,\n          quantidade: item.quantidade,\n          valor_unitario: item.valorUnitario\n        }));\n\n        const { error: itensError } = await supabase\n          .from('orcamento_itens')\n          .insert(itensParaInserir);\n\n        if (itensError) {\n          throw",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\orcamentoAPI.ts",
        "start": 187,
        "end": 200,
        "startLoc": {
          "line": 187,
          "column": 2,
          "position": 1639
        },
        "endLoc": {
          "line": 200,
          "column": 6,
          "position": 1737
        }
      },
      "secondFile": {
        "name": "src\\services\\orcamentoAPI.ts",
        "start": 124,
        "end": 137,
        "startLoc": {
          "line": 124,
          "column": 2,
          "position": 979
        },
        "endLoc": {
          "line": 137,
          "column": 49,
          "position": 1077
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "{\n  id: string;\n  nome: string;\n  descricao?: string;\n  categoria: string;\n  codigo: string;\n  preco_custo: number;\n  preco_venda: number;\n  quantidade_atual: number;\n  quantidade_minima: number;\n  fornecedor?: string;\n  localizacao?: string;\n  status: 'disponivel' | 'baixo_estoque' | 'esgotado' | 'descontinuado';\n  criadoEm: Date;\n  atualizadoEm: Date;\n}\n\ninterface",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\estoqueAPI.ts",
        "start": 3,
        "end": 20,
        "startLoc": {
          "line": 3,
          "column": 2,
          "position": 18
        },
        "endLoc": {
          "line": 20,
          "column": 10,
          "position": 136
        }
      },
      "secondFile": {
        "name": "src\\types\\shared.ts",
        "start": 390,
        "end": 407,
        "startLoc": {
          "line": 390,
          "column": 2,
          "position": 3193
        },
        "endLoc": {
          "line": 407,
          "column": 7,
          "position": 3311
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Erro ao resetar configurações:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\configAPI.ts",
        "start": 100,
        "end": 114,
        "startLoc": {
          "line": 100,
          "column": 7,
          "position": 719
        },
        "endLoc": {
          "line": 114,
          "column": 33,
          "position": 829
        }
      },
      "secondFile": {
        "name": "src\\services\\configAPI.ts",
        "start": 53,
        "end": 67,
        "startLoc": {
          "line": 53,
          "column": 6,
          "position": 329
        },
        "endLoc": {
          "line": 67,
          "column": 32,
          "position": 439
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({ config })\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Erro ao validar configurações:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\configAPI.ts",
        "start": 123,
        "end": 138,
        "startLoc": {
          "line": 123,
          "column": 7,
          "position": 923
        },
        "endLoc": {
          "line": 138,
          "column": 33,
          "position": 1049
        }
      },
      "secondFile": {
        "name": "src\\services\\configAPI.ts",
        "start": 76,
        "end": 91,
        "startLoc": {
          "line": 76,
          "column": 6,
          "position": 518
        },
        "endLoc": {
          "line": 91,
          "column": 35,
          "position": 644
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Erro ao remover logo:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\configAPI.ts",
        "start": 173,
        "end": 187,
        "startLoc": {
          "line": 173,
          "column": 9,
          "position": 1360
        },
        "endLoc": {
          "line": 187,
          "column": 24,
          "position": 1470
        }
      },
      "secondFile": {
        "name": "src\\services\\configAPI.ts",
        "start": 53,
        "end": 67,
        "startLoc": {
          "line": 53,
          "column": 6,
          "position": 329
        },
        "endLoc": {
          "line": 67,
          "column": 32,
          "position": 439
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Erro ao buscar informações de backup:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\configAPI.ts",
        "start": 199,
        "end": 214,
        "startLoc": {
          "line": 199,
          "column": 7,
          "position": 1555
        },
        "endLoc": {
          "line": 214,
          "column": 40,
          "position": 1674
        }
      },
      "secondFile": {
        "name": "src\\services\\configAPI.ts",
        "start": 52,
        "end": 67,
        "startLoc": {
          "line": 52,
          "column": 2,
          "position": 320
        },
        "endLoc": {
          "line": 67,
          "column": 32,
          "position": 439
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Erro ao criar backup manual:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\configAPI.ts",
        "start": 222,
        "end": 237,
        "startLoc": {
          "line": 222,
          "column": 9,
          "position": 1740
        },
        "endLoc": {
          "line": 237,
          "column": 31,
          "position": 1859
        }
      },
      "secondFile": {
        "name": "src\\services\\configAPI.ts",
        "start": 99,
        "end": 67,
        "startLoc": {
          "line": 99,
          "column": 8,
          "position": 710
        },
        "endLoc": {
          "line": 67,
          "column": 32,
          "position": 439
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Erro ao listar backups:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\configAPI.ts",
        "start": 245,
        "end": 260,
        "startLoc": {
          "line": 245,
          "column": 6,
          "position": 1943
        },
        "endLoc": {
          "line": 260,
          "column": 26,
          "position": 2064
        }
      },
      "secondFile": {
        "name": "src\\services\\configAPI.ts",
        "start": 52,
        "end": 67,
        "startLoc": {
          "line": 52,
          "column": 8,
          "position": 318
        },
        "endLoc": {
          "line": 67,
          "column": 32,
          "position": 439
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Erro ao restaurar backup:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\configAPI.ts",
        "start": 290,
        "end": 305,
        "startLoc": {
          "line": 290,
          "column": 12,
          "position": 2337
        },
        "endLoc": {
          "line": 305,
          "column": 28,
          "position": 2456
        }
      },
      "secondFile": {
        "name": "src\\services\\configAPI.ts",
        "start": 99,
        "end": 67,
        "startLoc": {
          "line": 99,
          "column": 8,
          "position": 710
        },
        "endLoc": {
          "line": 67,
          "column": 32,
          "position": 439
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: formData\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Erro ao fazer upload do backup:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\configAPI.ts",
        "start": 316,
        "end": 331,
        "startLoc": {
          "line": 316,
          "column": 17,
          "position": 2566
        },
        "endLoc": {
          "line": 331,
          "column": 34,
          "position": 2685
        }
      },
      "secondFile": {
        "name": "src\\services\\configAPI.ts",
        "start": 149,
        "end": 164,
        "startLoc": {
          "line": 149,
          "column": 7,
          "position": 1159
        },
        "endLoc": {
          "line": 164,
          "column": 32,
          "position": 1278
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Erro ao deletar backup:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\configAPI.ts",
        "start": 339,
        "end": 354,
        "startLoc": {
          "line": 339,
          "column": 2,
          "position": 2772
        },
        "endLoc": {
          "line": 354,
          "column": 26,
          "position": 2891
        }
      },
      "secondFile": {
        "name": "src\\services\\configAPI.ts",
        "start": 172,
        "end": 67,
        "startLoc": {
          "line": 172,
          "column": 7,
          "position": 1351
        },
        "endLoc": {
          "line": 67,
          "column": 32,
          "position": 439
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\n\n    switch (action) {\n      case 'create':\n        const createResponse = await fetch(baseUrl, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(data)\n        });\n        \n        if (!createResponse.ok) {\n          throw new Error(`Erro ao criar dispositivo: ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\backgroundSyncService.ts",
        "start": 276,
        "end": 287,
        "startLoc": {
          "line": 276,
          "column": 18,
          "position": 2128
        },
        "endLoc": {
          "line": 287,
          "column": 29,
          "position": 2220
        }
      },
      "secondFile": {
        "name": "src\\services\\backgroundSyncService.ts",
        "start": 223,
        "end": 234,
        "startLoc": {
          "line": 223,
          "column": 22,
          "position": 1693
        },
        "endLoc": {
          "line": 234,
          "column": 29,
          "position": 1785
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "${createResponse.statusText}`);\n        }\n        \n        return {\n          success: true,\n          data: await createResponse.json()\n        };\n\n      case 'update':\n        const updateResponse = await fetch(`${baseUrl}/${data.id}`, {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(data)\n        });\n        \n        if (!updateResponse.ok) {\n          throw new Error(`Erro ao atualizar dispositivo: ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\backgroundSyncService.ts",
        "start": 287,
        "end": 303,
        "startLoc": {
          "line": 287,
          "column": 29,
          "position": 2221
        },
        "endLoc": {
          "line": 303,
          "column": 33,
          "position": 2354
        }
      },
      "secondFile": {
        "name": "src\\services\\backgroundSyncService.ts",
        "start": 234,
        "end": 250,
        "startLoc": {
          "line": 234,
          "column": 29,
          "position": 1786
        },
        "endLoc": {
          "line": 250,
          "column": 33,
          "position": 1919
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "${updateResponse.statusText}`);\n        }\n        \n        return {\n          success: true,\n          data: await updateResponse.json()\n        };\n\n      case 'delete':\n        const deleteResponse = await fetch(`${baseUrl}/${data.id}`, {\n          method: 'DELETE'\n        });\n        \n        if (!deleteResponse.ok) {\n          throw new Error(`Erro ao deletar dispositivo: ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\backgroundSyncService.ts",
        "start": 303,
        "end": 317,
        "startLoc": {
          "line": 303,
          "column": 33,
          "position": 2355
        },
        "endLoc": {
          "line": 317,
          "column": 31,
          "position": 2462
        }
      },
      "secondFile": {
        "name": "src\\services\\backgroundSyncService.ts",
        "start": 250,
        "end": 264,
        "startLoc": {
          "line": 250,
          "column": 33,
          "position": 1920
        },
        "endLoc": {
          "line": 264,
          "column": 31,
          "position": 2027
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n  }\r\n\r\n  async put",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\apiClient.ts",
        "start": 50,
        "end": 61,
        "startLoc": {
          "line": 50,
          "column": 2,
          "position": 507
        },
        "endLoc": {
          "line": 61,
          "column": 4,
          "position": 611
        }
      },
      "secondFile": {
        "name": "src\\services\\apiClient.ts",
        "start": 33,
        "end": 44,
        "startLoc": {
          "line": 33,
          "column": 8,
          "position": 309
        },
        "endLoc": {
          "line": 44,
          "column": 5,
          "position": 413
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\r\n      headers,\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n  }\r\n\r\n  async delete",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\apiClient.ts",
        "start": 65,
        "end": 78,
        "startLoc": {
          "line": 65,
          "column": 6,
          "position": 687
        },
        "endLoc": {
          "line": 78,
          "column": 7,
          "position": 809
        }
      },
      "secondFile": {
        "name": "src\\services\\apiClient.ts",
        "start": 48,
        "end": 44,
        "startLoc": {
          "line": 48,
          "column": 7,
          "position": 489
        },
        "endLoc": {
          "line": 44,
          "column": 5,
          "position": 413
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\r\n      headers,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n  }\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\apiClient.ts",
        "start": 82,
        "end": 93,
        "startLoc": {
          "line": 82,
          "column": 9,
          "position": 879
        },
        "endLoc": {
          "line": 93,
          "column": 2,
          "position": 983
        }
      },
      "secondFile": {
        "name": "src\\services\\apiClient.ts",
        "start": 32,
        "end": 44,
        "startLoc": {
          "line": 32,
          "column": 6,
          "position": 304
        },
        "endLoc": {
          "line": 44,
          "column": 6,
          "position": 411
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ");\n      }\n\n      return {\n        id: data.id,\n        numero: data.numero,\n        clienteNome: data.cliente_nome,\n        clienteEmail: data.cliente_email,\n        clienteTelefone: data.cliente_telefone,\n        data: this.parseDate(data.data),\n        horario: data.horario,\n        tipoServico: data.tipo_servico,\n        descricaoProblema: data.descricao_problema,\n        equipamento: data.equipamento,\n        status: data.status,\n        tecnicoId: data.tecnico_id,\n        tecnicoNome: data.tecnicos?.nome,\n        criadoEm: new Date(data.created_at)\n      };\n    } catch (error) {\n      console.error('Erro ao obter detalhes do agendamento:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\agendamentoAPI.ts",
        "start": 349,
        "end": 369,
        "startLoc": {
          "line": 349,
          "column": 2,
          "position": 2877
        },
        "endLoc": {
          "line": 369,
          "column": 41,
          "position": 3047
        }
      },
      "secondFile": {
        "name": "src\\services\\agendamentoAPI.ts",
        "start": 222,
        "end": 242,
        "startLoc": {
          "line": 222,
          "column": 11,
          "position": 1833
        },
        "endLoc": {
          "line": 242,
          "column": 29,
          "position": 2003
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "=> (\n                      <SelectItem key={tipo.value} value={tipo.value}>\n                        <div className=\"flex items-center gap-2\">\n                          <tipo.icon className=\"h-4 w-4\" />\n                          {tipo.label}\n                        </div>\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n              \n              <",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\Relatorios.tsx",
        "start": 369,
        "end": 381,
        "startLoc": {
          "line": 369,
          "column": 2,
          "position": 3417
        },
        "endLoc": {
          "line": 381,
          "column": 2,
          "position": 3505
        }
      },
      "secondFile": {
        "name": "src\\pages\\Relatorios\\index.tsx",
        "start": 318,
        "end": 330,
        "startLoc": {
          "line": 318,
          "column": 2,
          "position": 2699
        },
        "endLoc": {
          "line": 330,
          "column": 2,
          "position": 2786
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "\n              />\n            </div>\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <ChartContainer\n                title=\"Receita por Dia\"\n                type=\"line\"\n                data={{\n                  labels: dados.financeiro.receitaPorDia.map(d => d.data),\n                  datasets: [{\n                    label: 'Receita',\n                    data: dados.financeiro.receitaPorDia.map(d => d.valor),\n                    borderColor: '#10b981'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\Relatorios.tsx",
        "start": 525,
        "end": 538,
        "startLoc": {
          "line": 525,
          "column": 2,
          "position": 4569
        },
        "endLoc": {
          "line": 538,
          "column": 10,
          "position": 4672
        }
      },
      "secondFile": {
        "name": "src\\pages\\Relatorios.tsx",
        "start": 464,
        "end": 477,
        "startLoc": {
          "line": 464,
          "column": 2,
          "position": 4163
        },
        "endLoc": {
          "line": 477,
          "column": 10,
          "position": 4266
        }
      }
    },
    {
      "format": "javascript",
      "lines": 54,
      "fragment": "} className=\"space-y-6\">\r\n            {error && (\r\n              <div className=\"p-3 bg-red-500/20 border border-red-500/30 rounded-lg\">\r\n                <p className=\"text-red-200 text-sm\">{error}</p>\r\n              </div>\r\n            )}\r\n\r\n            {/* Email Field */}\r\n            <div className=\"space-y-2\">\r\n              <label className=\"block text-sm font-medium text-gray-200\">\r\n                Email do Administrador\r\n              </label>\r\n              <div className=\"relative\">\r\n                <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\r\n                <input\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  className=\"w-full pl-10 pr-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent backdrop-blur-sm\"\r\n                  placeholder=\"admin@techrepair.com\"\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Password Field */}\r\n            <div className=\"space-y-2\">\r\n              <label className=\"block text-sm font-medium text-gray-200\">\r\n                Senha\r\n              </label>\r\n              <div className=\"relative\">\r\n                <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\r\n                <input\r\n                  type={showPassword ? 'text' : 'password'}\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  className=\"w-full pl-10 pr-12 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent backdrop-blur-sm\"\r\n                  placeholder=\"Sua senha\"\r\n                  required\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-white transition-colors\"\r\n                >\r\n                  {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Login Button */}\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\LoginAdmin.tsx",
        "start": 58,
        "end": 111,
        "startLoc": {
          "line": 58,
          "column": 12,
          "position": 604
        },
        "endLoc": {
          "line": 111,
          "column": 9,
          "position": 1030
        }
      },
      "secondFile": {
        "name": "src\\pages\\LoginLoja.tsx",
        "start": 65,
        "end": 116,
        "startLoc": {
          "line": 65,
          "column": 13,
          "position": 579
        },
        "endLoc": {
          "line": 116,
          "column": 8,
          "position": 928
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ";\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-950 via-slate-900 to-slate-950\">\r\n      <div className=\"p-6\">\r\n        {/* Header */}\r\n        <header className=\"mb-8\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <Link to=\"/dashboard-global",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\ClientesManagement.tsx",
        "start": 86,
        "end": 95,
        "startLoc": {
          "line": 86,
          "column": 2,
          "position": 763
        },
        "endLoc": {
          "line": 95,
          "column": 18,
          "position": 847
        }
      },
      "secondFile": {
        "name": "src\\pages\\DashboardGlobal.tsx",
        "start": 63,
        "end": 72,
        "startLoc": {
          "line": 63,
          "column": 2,
          "position": 574
        },
        "endLoc": {
          "line": 72,
          "column": 11,
          "position": 658
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Alert",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\Auth.tsx",
        "start": 1,
        "end": 8,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 9
        },
        "endLoc": {
          "line": 8,
          "column": 6,
          "position": 117
        }
      },
      "secondFile": {
        "name": "src\\pages\\Orcamentos\\NovoOrcamento.tsx",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 12
        },
        "endLoc": {
          "line": 9,
          "column": 10,
          "position": 115
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ";\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { \r\n  Loader2, \r\n  Monitor",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\Auth.tsx",
        "start": 3,
        "end": 11,
        "startLoc": {
          "line": 3,
          "column": 25,
          "position": 42
        },
        "endLoc": {
          "line": 11,
          "column": 8,
          "position": 141
        }
      },
      "secondFile": {
        "name": "src\\pages\\Diagnostic.tsx",
        "start": 5,
        "end": 13,
        "startLoc": {
          "line": 5,
          "column": 34,
          "position": 70
        },
        "endLoc": {
          "line": 13,
          "column": 4,
          "position": 169
        }
      }
    },
    {
      "format": "typescript",
      "lines": 56,
      "fragment": ";\n\ninterface ItemEstoque {\n  id: string;\n  nome: string;\n  descricao?: string;\n  categoria: string;\n  codigo: string;\n  preco_custo: number;\n  preco_venda: number;\n  quantidade_atual: number;\n  quantidade_minima: number;\n  fornecedor?: string;\n  localizacao?: string;\n  status: 'disponivel' | 'baixo_estoque' | 'esgotado' | 'descontinuado';\n  criadoEm: Date;\n  atualizadoEm: Date;\n}\n\ninterface FormularioItem {\n  nome: string;\n  descricao?: string;\n  categoria: string;\n  codigo: string;\n  preco_custo: number;\n  preco_venda: number;\n  quantidade_atual: number;\n  quantidade_minima: number;\n  fornecedor?: string;\n  localizacao?: string;\n}\n\ninterface MovimentacaoEstoque {\n  id: string;\n  item_id: string;\n  tipo: 'entrada' | 'saida';\n  quantidade: number;\n  quantidade_anterior: number;\n  quantidade_nova: number;\n  motivo: string;\n  observacoes?: string;\n  usuario_id: string;\n  criadoEm: Date;\n}\n\ninterface EstatisticasEstoque {\n  totalItens: number;\n  itensAtivos: number;\n  valorTotal: number;\n  itensBaixoEstoque: number;\n  itensEsgotados: number;\n  movimentacoesMes: number;\n  valorMovimentacoesMes: number;\n}\n\ninterface",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\useEstoque.ts",
        "start": 3,
        "end": 58,
        "startLoc": {
          "line": 3,
          "column": 20,
          "position": 40
        },
        "endLoc": {
          "line": 58,
          "column": 10,
          "position": 389
        }
      },
      "secondFile": {
        "name": "src\\services\\estoqueAPI.ts",
        "start": 1,
        "end": 56,
        "startLoc": {
          "line": 1,
          "column": 17,
          "position": 11
        },
        "endLoc": {
          "line": 56,
          "column": 6,
          "position": 360
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ",\n  horarioAbertura: '08:00',\n  horarioFechamento: '18:00',\n  diasFuncionamento: ['segunda', 'terca', 'quarta', 'quinta', 'sexta'],\n  tempoMedioReparo: 24,\n  notificacaoEmail: true,\n  notificacaoSMS: false,\n  notificacaoWhatsApp: true,\n  tema: 'light',\n  corPrimaria: '#3b82f6',\n  corSecundaria: '#64748b',\n  logo: '',\n  autenticacao2FA: false,\n  sessaoTimeout: 30,\n  logAuditoria: true,\n  backupAutomatico: true,\n  frequenciaBackup: 'diario',\n  retencaoBackup: 30\n};\n\nexport function",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\useConfiguracoes.ts",
        "start": 61,
        "end": 81,
        "startLoc": {
          "line": 61,
          "column": 3,
          "position": 402
        },
        "endLoc": {
          "line": 81,
          "column": 9,
          "position": 542
        }
      },
      "secondFile": {
        "name": "src\\services\\configAPI.ts",
        "start": 464,
        "end": 484,
        "startLoc": {
          "line": 464,
          "column": 28,
          "position": 3874
        },
        "endLoc": {
          "line": 484,
          "column": 6,
          "position": 4014
        }
      }
    },
    {
      "format": "typescript",
      "lines": 52,
      "fragment": ";\n\ninterface DisponibilidadeHorario {\n  horario: string;\n  disponivel: boolean;\n  tecnicoId?: string;\n  tecnicoNome?: string;\n}\n\ninterface DisponibilidadeData {\n  data: string;\n  horarios: DisponibilidadeHorario[];\n  totalDisponivel: number;\n}\n\ninterface Agendamento {\n  id: string;\n  numero: string;\n  clienteNome: string;\n  clienteEmail: string;\n  clienteTelefone: string;\n  data: Date;\n  horario: string;\n  tipoServico: string;\n  descricaoProblema: string;\n  equipamento: {\n    tipo: string;\n    marca: string;\n    modelo: string;\n  };\n  status: 'agendado' | 'confirmado' | 'em_andamento' | 'concluido' | 'cancelado';\n  tecnicoId?: string;\n  tecnicoNome?: string;\n  criadoEm: Date;\n}\n\ninterface FormularioAgendamento {\n  data: Date;\n  horario: string;\n  nome: string;\n  email: string;\n  telefone: string;\n  tipoServico: string;\n  descricaoProblema: string;\n  equipamento: {\n    tipo: string;\n    marca: string;\n    modelo: string;\n  };\n}\n\ninterface",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\useAgendamento.ts",
        "start": 3,
        "end": 54,
        "startLoc": {
          "line": 3,
          "column": 20,
          "position": 40
        },
        "endLoc": {
          "line": 54,
          "column": 10,
          "position": 352
        }
      },
      "secondFile": {
        "name": "src\\services\\agendamentoAPI.ts",
        "start": 1,
        "end": 52,
        "startLoc": {
          "line": 1,
          "column": 17,
          "position": 11
        },
        "endLoc": {
          "line": 52,
          "column": 6,
          "position": 323
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ", 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const formatTime",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\PWAStatus.tsx",
        "start": 105,
        "end": 110,
        "startLoc": {
          "line": 105,
          "column": 4,
          "position": 763
        },
        "endLoc": {
          "line": 110,
          "column": 11,
          "position": 851
        }
      },
      "secondFile": {
        "name": "src\\components\\forms\\FileUpload.tsx",
        "start": 185,
        "end": 190,
        "startLoc": {
          "line": 185,
          "column": 8,
          "position": 1713
        },
        "endLoc": {
          "line": 190,
          "column": 12,
          "position": 1801
        }
      }
    },
    {
      "format": "css",
      "lines": 20,
      "fragment": "--background: 222 84% 4.9%;\r\n    --foreground: 210 40% 98%;\r\n    --card: 222 84% 4.9%;\r\n    --card-foreground: 210 40% 98%;\r\n    --popover: 222 84% 4.9%;\r\n    --popover-foreground: 210 40% 98%;\r\n    --primary: 180 100% 50%;\r\n    --primary-foreground: 222 84% 4.9%;\r\n    --secondary: 217 32.6% 17.5%;\r\n    --secondary-foreground: 210 40% 98%;\r\n    --muted: 217 32.6% 17.5%;\r\n    --muted-foreground: 215 20.2% 65.1%;\r\n    --accent: 217 32.6% 17.5%;\r\n    --accent-foreground: 210 40% 98%;\r\n    --destructive: 0 62.8% 30.6%;\r\n    --destructive-foreground: 210 40% 98%;\r\n    --border: 217 32.6% 17.5%;\r\n    --input: 217 32.6% 17.5%;\r\n    --ring: 180 100% 50%;\r\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\index.css",
        "start": 53,
        "end": 72,
        "startLoc": {
          "line": 53,
          "column": 5,
          "position": 558
        },
        "endLoc": {
          "line": 72,
          "column": 2,
          "position": 786
        }
      },
      "secondFile": {
        "name": "src\\index.css",
        "start": 9,
        "end": 28,
        "startLoc": {
          "line": 9,
          "column": 5,
          "position": 76
        },
        "endLoc": {
          "line": 28,
          "column": 9,
          "position": 304
        }
      }
    }
  ]
}